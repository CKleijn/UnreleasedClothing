{"version":3,"file":"main.js","mappings":"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","sources":["webpack://uc-app/./apps/uc-api/src/app/app.controller.ts","webpack://uc-app/./apps/uc-api/src/app/app.module.ts","webpack://uc-app/./apps/uc-api/src/app/app.service.ts","webpack://uc-app/./apps/uc-api/src/app/auth/auth.module.ts","webpack://uc-app/./apps/uc-api/src/app/auth/auth.service.ts","webpack://uc-app/./apps/uc-api/src/app/auth/roles/role.enum.ts","webpack://uc-app/./apps/uc-api/src/app/auth/roles/roles.decorator.ts","webpack://uc-app/./apps/uc-api/src/app/auth/roles/roles.guard.ts","webpack://uc-app/./apps/uc-api/src/app/auth/strategies/jwt.strategy.ts","webpack://uc-app/./apps/uc-api/src/app/auth/strategies/local.strategy.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.controller.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.dto.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.module.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.schema.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.service.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.controller.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.dto.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.module.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.repository.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.schema.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.service.ts","webpack://uc-app/./apps/uc-api/src/app/user/dtos/loginUser.dto.ts","webpack://uc-app/./apps/uc-api/src/app/user/dtos/registerUser.dto.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.controller.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.module.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.schema.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.service.ts","webpack://uc-app/external commonjs \"@nestjs/common\"","webpack://uc-app/external commonjs \"@nestjs/core\"","webpack://uc-app/external commonjs \"@nestjs/jwt\"","webpack://uc-app/external commonjs \"@nestjs/mongoose\"","webpack://uc-app/external commonjs \"@nestjs/passport\"","webpack://uc-app/external commonjs \"bcrypt\"","webpack://uc-app/external commonjs \"mongoose\"","webpack://uc-app/external commonjs \"passport-jwt\"","webpack://uc-app/external commonjs \"passport-local\"","webpack://uc-app/external commonjs \"tslib\"","webpack://uc-app/webpack/bootstrap","webpack://uc-app/./apps/uc-api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { CategoryModule } from './category/category.module';\r\nimport { ProductModule } from './product/product.module';\r\nimport { UserModule } from './user/user.module';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forRoot('mongodb://127.0.0.1:27017/uc-db'), AuthModule, UserModule, ProductModule, CategoryModule],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to uc-api!' };\n  }\n}\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { UserModule } from '../user/user.module';\r\nimport { User, UserSchema } from '../user/user.schema';\r\nimport { AuthService } from './auth.service';\r\nimport { JwtStrategy } from './strategies/jwt.strategy';\r\nimport { LocalStrategy } from './strategies/local.strategy';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), forwardRef(() => UserModule), PassportModule, JwtModule.register({\r\n      secret: 'S1e2C3r4E5t',\r\n      signOptions: { expiresIn: '1h' },\r\n    }),\r\n  ],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n  exports: [AuthService, LocalStrategy, JwtStrategy]\r\n})\r\nexport class AuthModule {}","import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { LoginUserDto } from \"../user/dtos/loginUser.dto\";\r\nimport { User } from \"../user/user.schema\";\r\nimport { UserService } from \"../user/user.service\";\r\nimport * as bcrypt from 'bcrypt';\r\nimport { RegisterUserDto } from \"../user/dtos/registerUser.dto\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(private userService: UserService, private jwtService: JwtService) {}\r\n\r\n    async login(loginUserDto: LoginUserDto): Promise<string> {\r\n        return await this.jwtService.signAsync({ name: loginUserDto.username });\r\n    }\r\n\r\n    async register(registerUserDto: RegisterUserDto): Promise<User> {\r\n        const user = await this.userService.getUserByEmailAddress(registerUserDto.emailAddress);\r\n\r\n        if(!user) {\r\n            if(registerUserDto.password !== undefined) {\r\n                registerUserDto.password = await bcrypt.hash(registerUserDto.password, 10);\r\n                return await this.userService.registerUser(registerUserDto);\r\n            } else {\r\n                throw new HttpException('Password is required!', HttpStatus.CONFLICT)\r\n            }\r\n        } else {\r\n            throw new HttpException('This user already exists!', HttpStatus.CONFLICT)\r\n        }\r\n    }\r\n\r\n    async validate(emailAddress: string, password: string): Promise<User> {\r\n        const user = await this.userService.getUserByEmailAddress(emailAddress);\r\n\r\n        if(user) {\r\n            const passwordValid = await bcrypt.compare(password, user.password);\r\n\r\n            if (user && passwordValid)\r\n                return user;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","export enum Role {\r\n    CUSTOMER = 'customer',\r\n    BRAND = 'brand'\r\n}","import { SetMetadata } from \"@nestjs/common\";\r\nimport { Role } from \"./role.enum\";\r\n\r\nexport const Roles = (role: Role) => SetMetadata('role', role);","import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\r\nimport { Reflector } from \"@nestjs/core\";\r\nimport { Role } from \"./role.enum\";\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n    constructor(private reflector: Reflector) {}\r\n\r\n    canActivate(context: ExecutionContext): boolean {\r\n        const requireRole = this.reflector.getAllAndOverride<Role>('role', [\r\n            context.getHandler(),\r\n            context.getClass(),\r\n        ]);\r\n\r\n        if (!requireRole)\r\n            return true;\r\n\r\n        const { user } = context.switchToHttp().getRequest();\r\n\r\n        return requireRole === user?.role;\r\n    }\r\n}","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { UserService } from '../../user/user.service';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private userService: UserService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: 'S1e2C3r4E5t',\r\n    });\r\n  }\r\n\r\n  async validate(loginUser: any) {\r\n    const user = await this.userService.getUserByEmailAddress(loginUser.name);\r\n\r\n    return { \r\n      _id: user._id, \r\n      name: user.name, \r\n      role: user.role \r\n    };\r\n  }\r\n}","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { User } from '../../user/user.schema';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  async validate(username: string, password: string): Promise<User> {\r\n    const user = await this.authService.validate(username, password);\r\n\r\n    if (!user)\r\n      throw new UnauthorizedException({ message: \"This user doesn't exists or your password is wrong!\" });\r\n\r\n    return user;\r\n  }\r\n}","import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put, UseGuards, Request, UnauthorizedException } from \"@nestjs/common\";\r\nimport { AuthGuard } from \"@nestjs/passport\";\r\nimport { Role } from \"../auth/roles/role.enum\";\r\nimport { Roles } from \"../auth/roles/roles.decorator\";\r\nimport { RolesGuard } from \"../auth/roles/roles.guard\";\r\nimport { CategoryDto } from \"./category.dto\";\r\nimport { Category } from \"./category.schema\";\r\nimport { CategoryService } from \"./category.service\";\r\n\r\n@Controller()\r\nexport class CategoryController {\r\n    constructor(private readonly categoryService: CategoryService) {}\r\n\r\n    @Get('categories')\r\n    async getAllCategories(): Promise<Category[]> {\r\n        return await this.categoryService.getAllCategories();\r\n    }\r\n\r\n    @Get('category/:categoryId')\r\n    async getCategoryById(@Param('categoryId') categoryId: string): Promise<Category> {\r\n        try {\r\n            return await this.categoryService.getCategoryById(categoryId);\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Post('category')\r\n    async createCategory(@Request() req: any, @Body() categoryDto: CategoryDto): Promise<Object> {\r\n        try {\r\n            const createdCategory = await this.categoryService.createCategory(req.user, categoryDto);\r\n\r\n            return {\r\n                status: 201,\r\n                message: 'Category has been succesfully created!',\r\n                category: createdCategory\r\n            }\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Put('category/:categoryId')\r\n    async updateCategory(@Request() req: any, @Param('categoryId') categoryId: string, @Body() newCategory: Partial<CategoryDto>): Promise<Object> {\r\n        try {\r\n            const updatedCategory = await this.categoryService.updateCategory(req.user, categoryId, newCategory);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Category has been succesfully updated!',\r\n                category: updatedCategory\r\n            }\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Delete('category/:categoryId')\r\n    async deleteCategory(@Request() req: any, @Param('categoryId') categoryId: string): Promise<Object> {\r\n        try {\r\n            await this.categoryService.deleteCategory(req.user, categoryId);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Category has been succesfully deleted!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateCategoryExceptions(error: any) {\r\n        if(error?.response)\r\n            throw new HttpException('This category doesnt exists!', HttpStatus.NOT_FOUND)\r\n\r\n        if(error?.response?.message)\r\n            throw new UnauthorizedException(error?.response?.message);\r\n\r\n        if(error?.name === 'CastError')\r\n            throw new HttpException('This ObjectId doesnt exists!', HttpStatus.NOT_FOUND)\r\n\r\n        if(error?.errors?.title)\r\n            throw new HttpException(error.errors.title.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.description)\r\n            throw new HttpException(error.errors.description.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.icon)\r\n            throw new HttpException(error.errors.icon.message, HttpStatus.CONFLICT);\r\n    }\r\n}","export class CategoryDto {\r\n    title: string;\r\n    description: string;\r\n    icon: string;\r\n}\r\n","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { CategoryController } from \"./category.controller\";\r\nimport { Category, CategorySchema } from \"./category.schema\";\r\nimport { CategoryService } from \"./category.service\";\r\n\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Category.name, schema: CategorySchema }])],\r\n    controllers: [CategoryController],\r\n    providers: [CategoryService],\r\n})\r\n\r\nexport class CategoryModule {};","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ObjectId } from 'mongoose';\r\n\r\n@Schema()\r\nexport class Category {\r\n    @Prop()\r\n    userId: ObjectId;\r\n\r\n    @Prop({\r\n        required: [true, 'Title is required!'],\r\n    })\r\n    title: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Description is required!'],\r\n    })\r\n    description: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Icon is required!'],\r\n    })\r\n    icon: string\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n}\r\n\r\nexport const CategorySchema = SchemaFactory.createForClass(Category);","import { HttpException, HttpStatus, Injectable, UnauthorizedException } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model } from \"mongoose\";\r\nimport { CategoryDto } from \"./category.dto\";\r\nimport { Category } from \"./category.schema\";\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n    constructor(@InjectModel(Category.name) private categoryModel: Model<Category>) {}\r\n\r\n    async getAllCategories(): Promise<Category[]> {\r\n        return await this.categoryModel.find();\r\n    }\r\n\r\n    async getCategoryById(categoryId: string): Promise<Category> {\r\n        const category = await this.categoryModel.findById({ _id: categoryId });\r\n\r\n        if(!category)\r\n            throw new HttpException('This category doesnt exists!', HttpStatus.NOT_FOUND)\r\n\r\n        return category;\r\n    }\r\n\r\n    async createCategory(user: any, categoryDto: CategoryDto): Promise<Category> {\r\n        return await this.categoryModel.create({\r\n            userId: user._id,\r\n            title: categoryDto.title,\r\n            description: categoryDto.description,\r\n            icon: categoryDto.icon,\r\n            createdAt: new Date()\r\n        });\r\n    }\r\n\r\n    async updateCategory(user: any, categoryId: string, newCategory: Partial<CategoryDto>): Promise<Category> {\r\n        const category = await this.getCategoryById(categoryId);\r\n\r\n        if(user._id.equals(category.userId)) \r\n            return await this.categoryModel.findOneAndUpdate({ _id: categoryId }, newCategory, { new: true });\r\n\r\n        throw new UnauthorizedException({ message: \"This user don't have access to this method!\" });\r\n    }\r\n\r\n    async deleteCategory(user: any, categoryId: string): Promise<Category> {\r\n        const category = await this.getCategoryById(categoryId);\r\n\r\n        if(user._id.equals(category.userId)) \r\n            return await this.categoryModel.findOneAndDelete({ _id: categoryId });\r\n\r\n        throw new UnauthorizedException({ message: \"This user don't have access to this method!\" });\r\n    }\r\n}","import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put } from \"@nestjs/common\";\r\nimport { ProductDto } from \"./product.dto\";\r\nimport { Product } from \"./product.schema\";\r\nimport { ProductService } from \"./product.service\";\r\n\r\n@Controller()\r\nexport class ProductController {\r\n    constructor(private readonly productService: ProductService) {}\r\n\r\n    @Get('products')\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return await this.productService.getAllProducts();\r\n    }\r\n\r\n    @Get('product/:productId')\r\n    async getProductById(@Param('productId') productId: string): Promise<Product> {\r\n        try {\r\n            return await this.productService.getProductById(productId);\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @Post('product')\r\n    async createProduct(@Body() productDto: ProductDto): Promise<Product> {\r\n        try {\r\n            return await this.productService.createProduct(productDto);\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @Put('product/:productId')\r\n    async updateProduct(@Param('productId') productId: string, @Body() newProduct: Partial<ProductDto>): Promise<Product> {\r\n        try {\r\n            return await this.productService.updateProduct(productId, newProduct);\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @Delete('product/:productId')\r\n    async deleteProduct(@Param('productId') productId: string): Promise<Product> {\r\n        try {\r\n            return await this.productService.deleteProduct(productId);\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateProductExceptions(error: any) {\r\n        if(error.name === 'CastError')\r\n            throw new HttpException('This ObjectId doesnt exists!', HttpStatus.NOT_FOUND)\r\n\r\n        if(error.errors.name)\r\n            throw new HttpException(error.errors.name.message, HttpStatus.CONFLICT);\r\n\r\n        if(error.errors.picture)\r\n            throw new HttpException(error.errors.picture.message, HttpStatus.CONFLICT);\r\n        \r\n        if(error.errors.price)\r\n            throw new HttpException(error.errors.price.message, HttpStatus.CONFLICT);\r\n            \r\n        if(error.errors.description)\r\n            throw new HttpException(error.errors.description.message, HttpStatus.CONFLICT);\r\n    }\r\n}","export class ProductDto {\r\n    name: string;\r\n    picture: string;\r\n    price: number;\r\n    description: string;\r\n}\r\n","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { ProductController } from \"./product.controller\";\r\nimport { ProductRepository } from \"./product.repository\";\r\nimport { Product, ProductSchema } from \"./product.schema\";\r\nimport { ProductService } from \"./product.service\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }])],\r\n    controllers: [ProductController],\r\n    providers: [ProductService, ProductRepository],\r\n})\r\n\r\nexport class ProductModule {};","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model } from \"mongoose\";\r\nimport { Product } from \"./product.schema\";\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n    constructor(@InjectModel(Product.name) private productModel: Model<Product>) {}\r\n\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return await this.productModel.find();\r\n    }\r\n\r\n    async getProductById(productId: string): Promise<Product> {\r\n        return await this.productModel.findById({ _id: productId })\r\n    }\r\n\r\n    async createProduct(product: Product): Promise<Product> {\r\n        return await this.productModel.create(product);\r\n    }\r\n\r\n    async updateProduct(productId: string, newProduct: Partial<Product>): Promise<Product> {\r\n        return await this.productModel.findOneAndUpdate({ _id: productId }, newProduct, { new: true });\r\n    }\r\n\r\n    async deleteProduct(productId: string): Promise<Product> {\r\n        return await this.productModel.findOneAndDelete({ _id: productId });\r\n    }\r\n}","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\n\r\n@Schema()\r\nexport class Product {\r\n    @Prop({\r\n        required: [true, 'Name is required!'],\r\n    })\r\n    name: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Picture is required!'],\r\n    })\r\n    picture: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Price is required!'],\r\n    })\r\n    price: number;\r\n\r\n    @Prop({\r\n        required: [true, 'Description is required!'],\r\n    })\r\n    description: string;\r\n\r\n    @Prop()\r\n    isActive: boolean;\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n}\r\n\r\nexport const ProductSchema = SchemaFactory.createForClass(Product);","// import { Injectable } from \"@nestjs/common\";\r\n// import { InjectModel } from \"@nestjs/mongoose\";\r\n// import { Model } from \"mongoose\";\r\n// import { User } from \"./user.schema\";\r\n\r\nimport { Injectable } from \"@nestjs/common\";\r\nimport { ProductDto } from \"./product.dto\";\r\nimport { ProductRepository } from \"./product.repository\";\r\nimport { Product } from \"./product.schema\";\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    constructor(private productRepository: ProductRepository) {}\r\n\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return await this.productRepository.getAllProducts();\r\n    }\r\n\r\n    async getProductById(productId: string): Promise<Product> {\r\n        return await this.productRepository.getProductById(productId);\r\n    }\r\n\r\n    async createProduct(productDto: ProductDto): Promise<Product> {\r\n        return await this.productRepository.createProduct({\r\n            name: productDto.name,\r\n            picture: productDto.picture,\r\n            price: productDto.price,\r\n            description: productDto.description,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n    }\r\n\r\n    async updateProduct(productId: string, newProduct: Partial<ProductDto>): Promise<Product> {\r\n        return await this.productRepository.updateProduct(productId, newProduct);\r\n    }\r\n\r\n    async deleteProduct(productId: string): Promise<Product> {\r\n        return await this.productRepository.deleteProduct(productId);\r\n    }\r\n}","export class LoginUserDto {\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}\r\n","export class RegisterUserDto {\r\n    name: string;\r\n    emailAddress: string;\r\n    picture: string;\r\n    role: string;\r\n    password: string;\r\n\r\n    constructor(name: string, emailAddress: string, picture: string, role: string, password: string) {\r\n        this.name = name;\r\n        this.emailAddress = emailAddress;\r\n        this.picture;\r\n        this.role = role;\r\n        this.password = password;\r\n    }\r\n}\r\n","import { Body, Controller, Get, HttpException, HttpStatus, Post, UnauthorizedException, UseGuards } from \"@nestjs/common\";\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Role } from \"../auth/roles/role.enum\";\r\nimport { Roles } from \"../auth/roles/roles.decorator\";\r\nimport { RolesGuard } from \"../auth/roles/roles.guard\";\r\nimport { LoginUserDto } from \"./dtos/loginUser.dto\";\r\nimport { RegisterUserDto } from \"./dtos/registerUser.dto\";\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n    constructor(private authService: AuthService) {}\r\n\r\n    @UseGuards(AuthGuard('local'))\r\n    @Post('login')\r\n    async login(@Body() loginUserDto: LoginUserDto) {\r\n        try {\r\n            const token = await this.authService.login(loginUserDto);\r\n\r\n            return {\r\n                'message': 'You are successfully logged in!',\r\n                'jwt_token': token\r\n            }\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @Post('register')\r\n    async register(@Body() registerUserDto: RegisterUserDto) {\r\n        try {\r\n            return await this.authService.register(registerUserDto);\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateUserExceptions(error: any) {\r\n        if(error?.response === `This user doesn't exists or your password is wrong!`)\r\n            throw new UnauthorizedException(error.response);\r\n\r\n        if(error?.response === 'This user already exists!')\r\n            throw new HttpException(error.response, HttpStatus.CONFLICT);\r\n\r\n        if(error?.response === 'Password is required!')\r\n            throw new HttpException(error.response, HttpStatus.CONFLICT);\r\n\r\n        if(error?.name === 'CastError')\r\n            throw new HttpException('This ObjectId doesnt exists!', HttpStatus.NOT_FOUND)\r\n\r\n        if(error?.errors?.name)\r\n            throw new HttpException(error.errors.name.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.emailAddress)\r\n            throw new HttpException(error.errors.emailAddress.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.picture)\r\n            throw new HttpException(error.errors.picture.message, HttpStatus.CONFLICT);\r\n        \r\n        if(error?.errors?.role)\r\n            throw new HttpException(error.errors.role.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.password)\r\n            throw new HttpException(error.errors.password.message, HttpStatus.CONFLICT);\r\n    }\r\n}","import { forwardRef, Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { UserController } from \"./user.controller\";\r\nimport { User, UserSchema } from \"./user.schema\";\r\nimport { UserService } from \"./user.service\";\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from \"@nestjs/passport\"\r\nimport { AuthModule } from \"../auth/auth.module\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), forwardRef(() => AuthModule), PassportModule, JwtModule.register({\r\n        secret: 'S1e2C3r4E5t',\r\n        signOptions: { expiresIn: '1h' },\r\n    })],\r\n    controllers: [UserController],\r\n    providers: [UserService],\r\n    exports: [UserService]\r\n})\r\nexport class UserModule {};","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ObjectId } from 'mongoose';\r\nimport { Role } from '../auth/roles/role.enum';\r\n\r\n@Schema()\r\nexport class User {\r\n    @Prop()\r\n    _id: ObjectId;\r\n\r\n    @Prop({\r\n        required: [true, 'Name is required!'],\r\n    })\r\n    name: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Emailaddress is required!'],\r\n        validate: {\r\n            validator: function (v: any) {\r\n                return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(v);\r\n            },\r\n            message: 'Use a correct emailaddress like j.doe@gmail.com!',\r\n        },\r\n    })\r\n    emailAddress: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Picture is required!'],\r\n        default: 'https://cdn-icons-png.flaticon.com/512/149/149071.png'\r\n    })\r\n    picture: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Role is required!'],\r\n        enum: {\r\n            values: [Role.BRAND, Role.CUSTOMER],\r\n            message: 'Choose between a customer or a brand as role!'\r\n        }\r\n    })\r\n    role: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Password is required!'],\r\n    })\r\n    password: string;\r\n\r\n    @Prop({\r\n        default: true\r\n    })\r\n    isActive: boolean;\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model } from \"mongoose\";\r\nimport { RegisterUserDto } from \"./dtos/registerUser.dto\";\r\nimport { User } from \"./user.schema\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(@InjectModel(User.name) private userModel: Model<User>) {}\r\n\r\n    async getUserByEmailAddress(emailAddress: string): Promise<User> {\r\n        return await this.userModel.findOne({ emailAddress });\r\n    }\r\n\r\n    async registerUser(registerUserDto: RegisterUserDto): Promise<User> {\r\n        const user = {\r\n            ...registerUserDto,\r\n            'createdAt': new Date()\r\n        }\r\n        return await this.userModel.create(user);\r\n    }\r\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"bcrypt\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen(port);\r\n  await app.enableCors();\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}