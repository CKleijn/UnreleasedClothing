{"version":3,"file":"main.js","mappings":"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","sources":["webpack://uc-app/./apps/uc-api/src/app/app.controller.ts","webpack://uc-app/./apps/uc-api/src/app/app.module.ts","webpack://uc-app/./apps/uc-api/src/app/app.service.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.controller.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.dto.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.module.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.repository.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.schema.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.service.ts","webpack://uc-app/external commonjs \"@nestjs/common\"","webpack://uc-app/external commonjs \"@nestjs/core\"","webpack://uc-app/external commonjs \"@nestjs/mongoose\"","webpack://uc-app/external commonjs \"class-validator\"","webpack://uc-app/external commonjs \"mongoose\"","webpack://uc-app/external commonjs \"tslib\"","webpack://uc-app/webpack/bootstrap","webpack://uc-app/./apps/uc-api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { ProductModule } from './product/product.module';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forRoot('mongodb://127.0.0.1:27017/uc-db'), ProductModule],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to uc-api!' };\n  }\n}\n","import { Body, Controller, Delete, Get, Param, Post, Put } from \"@nestjs/common\";\r\nimport { ProductDto } from \"./product.dto\";\r\nimport { Product } from \"./product.schema\";\r\nimport { ProductService } from \"./product.service\";\r\n\r\n@Controller()\r\nexport class ProductController {\r\n    constructor(private readonly productService: ProductService) {}\r\n\r\n    @Get('products')\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return this.productService.getAllProducts();\r\n    }\r\n\r\n    @Get('product/:productId')\r\n    async getProductById(@Param('productId') productId: string): Promise<Product> {\r\n        return this.productService.getProductById(productId);\r\n    }\r\n\r\n    @Post('product')\r\n    async createProduct(@Body() productDto: ProductDto): Promise<Product> {\r\n        return this.productService.createProduct(productDto);\r\n    }\r\n\r\n    @Put('product/:productId')\r\n    async updateProduct(@Param('productId') productId: string, @Body() newProduct: Partial<Product>): Promise<Product> {\r\n        return this.productService.updateProduct(productId, newProduct);\r\n    }\r\n\r\n    @Delete('product/:productId')\r\n    async deleteProduct(@Param('productId') productId: string): Promise<Product> {\r\n        return this.productService.deleteProduct(productId);\r\n    }\r\n}","import { IsNumber, IsString } from 'class-validator';\r\n\r\nexport class ProductDto {\r\n    @IsString()\r\n    name: string;\r\n\r\n    @IsString()\r\n    picture: string;\r\n\r\n    @IsNumber()\r\n    price: number;\r\n\r\n    @IsString()\r\n    description: string;\r\n}\r\n","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { ProductController } from \"./product.controller\";\r\nimport { ProductRepository } from \"./product.repository\";\r\nimport { Product, ProductSchema } from \"./product.schema\";\r\nimport { ProductService } from \"./product.service\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }])],\r\n    controllers: [ProductController],\r\n    providers: [ProductService, ProductRepository],\r\n})\r\n\r\nexport class ProductModule {};","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model } from \"mongoose\";\r\nimport { Product } from \"./product.schema\";\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n    constructor(@InjectModel(Product.name) private productModel: Model<Product>) {}\r\n\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return await this.productModel.find();\r\n    }\r\n\r\n    async getProductById(productId: string): Promise<Product> {\r\n        return await this.productModel.findById({ _id: productId })\r\n    }\r\n\r\n    async createProduct(product: Product): Promise<Product> {\r\n        return await this.productModel.create(product);\r\n    }\r\n\r\n    async updateProduct(productId: string, newProduct: Partial<Product>): Promise<Product> {\r\n        return await this.productModel.findOneAndUpdate({ _id: productId }, newProduct, { new: true });\r\n    }\r\n\r\n    async deleteProduct(productId: string): Promise<Product> {\r\n        return await this.productModel.findOneAndDelete({ _id: productId });\r\n    }\r\n}","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\n\r\n@Schema()\r\nexport class Product {\r\n    @Prop({\r\n        required: [true, 'Name is required!'],\r\n    })\r\n    name: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Picture is required!'],\r\n    })\r\n    picture: string;\r\n\r\n    @Prop({\r\n        required: [true, 'Price is required!'],\r\n    })\r\n    price: number;\r\n\r\n    @Prop({\r\n        required: [true, 'Description is required!'],\r\n    })\r\n    description: string;\r\n\r\n    @Prop()\r\n    isActive: boolean;\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n}\r\n\r\nexport const ProductSchema = SchemaFactory.createForClass(Product);","// import { Injectable } from \"@nestjs/common\";\r\n// import { InjectModel } from \"@nestjs/mongoose\";\r\n// import { Model } from \"mongoose\";\r\n// import { User } from \"./user.schema\";\r\n\r\nimport { Injectable } from \"@nestjs/common\";\r\nimport { ProductDto } from \"./product.dto\";\r\nimport { ProductRepository } from \"./product.repository\";\r\nimport { Product } from \"./product.schema\";\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    constructor(private productRepository: ProductRepository) {}\r\n\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return this.productRepository.getAllProducts();\r\n    }\r\n\r\n    async getProductById(productId: string): Promise<Product> {\r\n        return this.productRepository.getProductById(productId);\r\n    }\r\n\r\n    async createProduct(productDto: ProductDto): Promise<Product> {\r\n        return this.productRepository.createProduct({\r\n            name: productDto.name,\r\n            picture: productDto.picture,\r\n            price: productDto.price,\r\n            description: productDto.description,\r\n            isActive: true,\r\n            createdAt: new Date()\r\n        })\r\n    }\r\n\r\n    async updateProduct(productId: string, newProduct: Partial<Product>): Promise<Product> {\r\n        return this.productRepository.updateProduct(productId, newProduct);\r\n    }\r\n\r\n    async deleteProduct(productId: string): Promise<Product> {\r\n        return this.productRepository.deleteProduct(productId);\r\n    }\r\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"class-validator\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}