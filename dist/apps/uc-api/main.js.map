{"version":3,"file":"main.js","mappings":"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","sources":["webpack://uc-app/./apps/uc-api/src/app/app.controller.ts","webpack://uc-app/./apps/uc-api/src/app/app.module.ts","webpack://uc-app/./apps/uc-api/src/app/app.service.ts","webpack://uc-app/./apps/uc-api/src/app/auth/auth.module.ts","webpack://uc-app/./apps/uc-api/src/app/auth/auth.service.ts","webpack://uc-app/./apps/uc-api/src/app/auth/roles/role.enum.ts","webpack://uc-app/./apps/uc-api/src/app/auth/roles/roles.decorator.ts","webpack://uc-app/./apps/uc-api/src/app/auth/roles/roles.guard.ts","webpack://uc-app/./apps/uc-api/src/app/auth/strategies/jwt.strategy.ts","webpack://uc-app/./apps/uc-api/src/app/auth/strategies/local.strategy.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.controller.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.dto.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.module.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.schema.ts","webpack://uc-app/./apps/uc-api/src/app/category/category.service.ts","webpack://uc-app/./apps/uc-api/src/app/comment/comment.controller.ts","webpack://uc-app/./apps/uc-api/src/app/comment/comment.dto.ts","webpack://uc-app/./apps/uc-api/src/app/comment/comment.module.ts","webpack://uc-app/./apps/uc-api/src/app/comment/comment.service.ts","webpack://uc-app/./apps/uc-api/src/app/icon/icon.controller.ts","webpack://uc-app/./apps/uc-api/src/app/icon/icon.module.ts","webpack://uc-app/./apps/uc-api/src/app/icon/icon.schema.ts","webpack://uc-app/./apps/uc-api/src/app/icon/icon.service.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.controller.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.dto.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.module.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.schema.ts","webpack://uc-app/./apps/uc-api/src/app/product/product.service.ts","webpack://uc-app/./apps/uc-api/src/app/user/dtos/loginUser.dto.ts","webpack://uc-app/./apps/uc-api/src/app/user/dtos/registerUser.dto.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.controller.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.module.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.schema.ts","webpack://uc-app/./apps/uc-api/src/app/user/user.service.ts","webpack://uc-app/external commonjs \"@nestjs/common\"","webpack://uc-app/external commonjs \"@nestjs/core\"","webpack://uc-app/external commonjs \"@nestjs/jwt\"","webpack://uc-app/external commonjs \"@nestjs/mongoose\"","webpack://uc-app/external commonjs \"@nestjs/passport\"","webpack://uc-app/external commonjs \"bcrypt\"","webpack://uc-app/external commonjs \"mongoose\"","webpack://uc-app/external commonjs \"passport-jwt\"","webpack://uc-app/external commonjs \"passport-local\"","webpack://uc-app/external commonjs \"tslib\"","webpack://uc-app/webpack/bootstrap","webpack://uc-app/./apps/uc-api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { UserModule } from './user/user.module';\r\nimport { CategoryModule } from './category/category.module';\r\nimport { CommentModule } from './comment/comment.module';\r\nimport { ProductModule } from './product/product.module';\r\nimport { IconModule } from './icon/icon.module';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forRoot('mongodb://127.0.0.1:27017/uc-db'), AuthModule, UserModule, ProductModule, CategoryModule, CommentModule, IconModule],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to uc-api!' };\n  }\n}\n","import { forwardRef, Module } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { UserModule } from '../user/user.module';\r\nimport { User, UserSchema } from '../user/user.schema';\r\nimport { AuthService } from './auth.service';\r\nimport { JwtStrategy } from './strategies/jwt.strategy';\r\nimport { LocalStrategy } from './strategies/local.strategy';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), forwardRef(() => UserModule), PassportModule, JwtModule.register({\r\n      secret: 'S1e2C3r4E5t',\r\n      signOptions: { expiresIn: '7d' },\r\n    }),\r\n  ],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n  exports: [AuthService, LocalStrategy, JwtStrategy]\r\n})\r\nexport class AuthModule {}","import { HttpException, HttpStatus, Inject, Injectable } from \"@nestjs/common\";\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { LoginUserDto } from \"../user/dtos/loginUser.dto\";\r\nimport { User } from \"../user/user.schema\";\r\nimport { UserService } from \"../user/user.service\";\r\nimport * as bcrypt from 'bcrypt';\r\nimport { RegisterUserDto } from \"../user/dtos/registerUser.dto\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(@Inject(UserService) private userService: UserService, @Inject(JwtService) private jwtService: JwtService) {}\r\n\r\n    async login(loginUserDto: LoginUserDto): Promise<string> {\r\n        return await this.jwtService.signAsync({ name: loginUserDto.username });\r\n    }\r\n\r\n    async register(registerUserDto: RegisterUserDto): Promise<void> {\r\n        const user = await this.userService.getUserByEmailAddress(registerUserDto.emailAddress);\r\n\r\n        if(!user) {\r\n            if(registerUserDto.password !== undefined) {\r\n                registerUserDto.password = await bcrypt.hash(registerUserDto.password, 10);\r\n                await this.userService.registerUser(registerUserDto);\r\n            } else {\r\n                throw new HttpException('Password is required!', HttpStatus.CONFLICT)\r\n            }\r\n        } else {\r\n            throw new HttpException('This user already exists!', HttpStatus.CONFLICT)\r\n        }\r\n    }\r\n\r\n    async validate(emailAddress: string, password: string): Promise<User> {\r\n        const user = await this.userService.getUserByEmailAddress(emailAddress);\r\n\r\n        if(user) {\r\n            const passwordValid = await bcrypt.compare(password, user.password.toString());\r\n\r\n            if (!passwordValid)\r\n                throw new HttpException({ message: `This password isn't correct!` }, HttpStatus.CONFLICT);\r\n\r\n            return user;\r\n        }\r\n\r\n        throw new HttpException({ message: `This user doesn't exists!` }, HttpStatus.NOT_FOUND);\r\n    }\r\n}","export enum Role {\r\n    CUSTOMER = 'customer',\r\n    BRAND = 'brand'\r\n}","import { SetMetadata } from \"@nestjs/common\";\r\nimport { Role } from \"./role.enum\";\r\n\r\nexport const Roles = (role: Role) => SetMetadata('role', role);","import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\r\nimport { Reflector } from \"@nestjs/core\";\r\nimport { Role } from \"./role.enum\";\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n    constructor(private reflector: Reflector) {}\r\n\r\n    canActivate(context: ExecutionContext): boolean {\r\n        const requireRole = this.reflector.getAllAndOverride<Role>('role', [\r\n            context.getHandler(),\r\n            context.getClass(),\r\n        ]);\r\n\r\n        if (!requireRole)\r\n            return true;\r\n\r\n        const { user } = context.switchToHttp().getRequest();\r\n\r\n        return requireRole === user?.role;\r\n    }\r\n}","import { Inject, Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { UserService } from '../../user/user.service';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(@Inject(UserService) private userService: UserService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: 'S1e2C3r4E5t',\r\n    });\r\n  }\r\n\r\n  async validate(loginUser: any) {\r\n    const user = await this.userService.getUserByEmailAddress(loginUser.name);\r\n\r\n    return { \r\n      _id: user._id, \r\n      name: user.name,\r\n      emailAddress: user.emailAddress, \r\n      role: user.role \r\n    };\r\n  }\r\n}","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Inject, Injectable } from '@nestjs/common';\r\nimport { User } from '../../user/user.schema';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(@Inject(AuthService) private authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  async validate(username: string, password: string): Promise<User> {\r\n    return await this.authService.validate(username, password);\r\n  }\r\n}","import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put, UseGuards, Request, UnauthorizedException } from \"@nestjs/common\";\r\nimport { AuthGuard } from \"@nestjs/passport\";\r\nimport { Role } from \"../auth/roles/role.enum\";\r\nimport { Roles } from \"../auth/roles/roles.decorator\";\r\nimport { RolesGuard } from \"../auth/roles/roles.guard\";\r\nimport { CategoryDto } from \"./category.dto\";\r\nimport { Category } from \"./category.schema\";\r\nimport { CategoryService } from \"./category.service\";\r\n\r\n@Controller()\r\nexport class CategoryController {\r\n    constructor(private readonly categoryService: CategoryService) {}\r\n\r\n    @Get('categories')\r\n    async getCategories(): Promise<Category[]> {\r\n        return await this.categoryService.getCategories();\r\n    }\r\n\r\n    @Get('categories/all')\r\n    async getAllCategories(): Promise<Category[]> {\r\n        return await this.categoryService.getAllCategories();\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Get('categories/:userId')\r\n    async getAllCategoriesFromUser(@Param('userId') userId: string): Promise<Category[]> {\r\n        return await this.categoryService.getAllCategoriesFromUser(userId);\r\n    }\r\n\r\n    @Get('category/:categoryId')\r\n    async getCategoryById(@Param('categoryId') categoryId: string): Promise<Category> {\r\n        try {\r\n            return await this.categoryService.getCategoryById(categoryId);\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Post('category')\r\n    async createCategory(@Request() req: any, @Body() categoryDto: CategoryDto): Promise<Object> {\r\n        try {\r\n            await this.categoryService.createCategory(req.user, categoryDto);\r\n\r\n            return {\r\n                status: 201,\r\n                message: 'Category has been succesfully created!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Put('category/:categoryId')\r\n    async updateCategory(@Request() req: any, @Param('categoryId') categoryId: string, @Body() newCategory: Partial<CategoryDto>): Promise<Object> {\r\n        try {\r\n            await this.categoryService.updateCategory(req.user, categoryId, newCategory);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Category has been succesfully updated!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Delete('category/:categoryId')\r\n    async deleteCategory(@Request() req: any, @Param('categoryId') categoryId: string): Promise<Object> {\r\n        try {\r\n            await this.categoryService.deleteCategory(req.user, categoryId);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Category has been succesfully deleted!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCategoryExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateCategoryExceptions(error: any) {\r\n        if(error?.name === 'CastError')\r\n            throw new HttpException(`This category doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        if(error?.response === `This category can't be deleted, because products are linked to this category!`)\r\n            throw new HttpException(`This category can't be deleted, because products are linked to this category!`, HttpStatus.CONFLICT);\r\n\r\n        if(error?.response === 'This category title already exists!')\r\n            throw new HttpException('This category title already exists!', HttpStatus.CONFLICT);\r\n\r\n        if(error?.response === `This category can't be put offline, because it's connected to products!`)\r\n            throw new HttpException(`This category can't be put offline, because it's connected to products!`, HttpStatus.CONFLICT);\r\n\r\n        if(error?.response?.message)\r\n            throw new UnauthorizedException(error?.response?.message);\r\n\r\n        if(error?.errors?.title)\r\n            throw new HttpException(error.errors.title.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.description)\r\n            throw new HttpException(error.errors.description.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.icon)\r\n            throw new HttpException(error.errors.icon.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.isActive)\r\n            throw new HttpException(error.errors.isActive.message, HttpStatus.CONFLICT);\r\n    }\r\n}","export class CategoryDto {\r\n    title: string;\r\n    description: string;\r\n    icon: string;\r\n    isActive: boolean;\r\n}\r\n","import { forwardRef, Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { IconModule } from \"../icon/icon.module\";\r\nimport { ProductModule } from \"../product/product.module\";\r\nimport { CategoryController } from \"./category.controller\";\r\nimport { Category, CategorySchema } from \"./category.schema\";\r\nimport { CategoryService } from \"./category.service\";\r\n\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Category.name, schema: CategorySchema }]), forwardRef(() => ProductModule), IconModule],\r\n    controllers: [CategoryController],\r\n    providers: [CategoryService],\r\n    exports: [CategoryService]\r\n})\r\n\r\nexport class CategoryModule {};","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ObjectId } from 'mongoose';\r\nimport { Icon } from '../icon/icon.schema';\r\n\r\n@Schema()\r\nexport class Category {\r\n    @Prop()\r\n    _id: ObjectId;\r\n\r\n    @Prop({\r\n        required: [true, 'Title is required!'],\r\n    })\r\n    title: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Description is required!'],\r\n    })\r\n    description: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Icon is required!'],\r\n        default: 'https://www.simplelaw.com/hubfs/Blog_Media/cdn2.hubspot.nethubfs5154887Blog_Mediaimage_not_found.png'\r\n    })\r\n    icon: Icon;\r\n\r\n    @Prop({\r\n        required: [true, 'isActive is required!'],\r\n    })\r\n    isActive: Boolean;\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    createdBy: ObjectId;\r\n}\r\n\r\nexport const CategorySchema = SchemaFactory.createForClass(Category);","import { forwardRef, HttpException, HttpStatus, Inject, Injectable, UnauthorizedException } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport mongoose, { Model } from \"mongoose\";\r\nimport { IconService } from \"../icon/icon.service\";\r\nimport { ProductService } from \"../product/product.service\";\r\nimport { CategoryDto } from \"./category.dto\";\r\nimport { Category } from \"./category.schema\";\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n    constructor(@InjectModel(Category.name) private categoryModel: Model<Category>, @Inject(forwardRef(() => ProductService)) private productService: ProductService, @Inject(IconService) private iconService: IconService) { }\r\n\r\n    async getCategories(): Promise<Category[]> {\r\n        return await this.categoryModel.find({ isActive: true }).populate('createdBy');\r\n    }\r\n\r\n    async getAllCategories(): Promise<Category[]> {\r\n        return await this.categoryModel.find({}).populate('createdBy');\r\n    }\r\n\r\n    async getAllCategoriesFromUser(userId: string): Promise<Category[]> {\r\n        return await this.categoryModel.aggregate([\r\n            {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'user'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'createdBy': {\r\n                        '$first': '$user'\r\n                    }\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    'createdBy._id': new mongoose.Types.ObjectId(userId)\r\n                }\r\n            }\r\n        ])\r\n    }\r\n\r\n    async getCategoryById(categoryId: string): Promise<Category> {\r\n        const category = await this.categoryModel.findById({ _id: new mongoose.Types.ObjectId(categoryId) }).populate('createdBy');\r\n\r\n        if (!category)\r\n            throw new HttpException(`This category doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        return category;\r\n    }\r\n\r\n    async createCategory(user: any, categoryDto: CategoryDto): Promise<void> {\r\n        const uniqueCategory = await this.categoryModel.findOne({ title: categoryDto.title });\r\n\r\n        if (uniqueCategory)\r\n            throw new HttpException('This category title already exists!', HttpStatus.CONFLICT);\r\n\r\n        await this.categoryModel.create({\r\n            _id: new mongoose.Types.ObjectId(),\r\n            ...categoryDto,\r\n            icon: await this.iconService.getIconById(categoryDto.icon),\r\n            createdAt: new Date(),\r\n            createdBy: user._id\r\n        })\r\n    }\r\n\r\n    async updateCategory(user: any, categoryId: string, newCategory: Partial<CategoryDto>): Promise<void> {\r\n        const category = await this.categoryModel.findById({ _id: categoryId });\r\n        const uniqueCategory = await this.categoryModel.findOne({ title: newCategory?.title });\r\n        const products = await this.productService.getAllProductsFromCategory(categoryId);\r\n\r\n        if (!user._id.equals(category.createdBy))\r\n            throw new UnauthorizedException({ message: `This user don't have access to this method!` });\r\n\r\n        if (uniqueCategory && newCategory?.title !== category.title)\r\n            throw new HttpException('This category title already exists!', HttpStatus.CONFLICT);\r\n\r\n        if (products.length > 0 && newCategory?.isActive === false)\r\n            throw new HttpException(`This category can't be put offline, because it's connected to products!`, HttpStatus.CONFLICT);\r\n\r\n\r\n        await this.categoryModel.findOneAndUpdate({ _id: categoryId },\r\n            {\r\n                title: newCategory?.title,\r\n                description: newCategory?.description,\r\n                icon: await this.iconService.getIconById(newCategory?.icon),\r\n                isActive: newCategory?.isActive\r\n            });\r\n\r\n        if (products)\r\n            await this.productService.updateCategoryFromNestedProducts(newCategory, products);\r\n    }\r\n\r\n    async deleteCategory(user: any, categoryId: string): Promise<void> {\r\n        const category = await this.categoryModel.findById({ _id: categoryId });\r\n        const products = await this.productService.getAllProductsFromCategory(categoryId);\r\n\r\n        if (!user._id.equals(category.createdBy))\r\n            throw new UnauthorizedException({ message: `This user don't have access to this method!` });\r\n\r\n        if (products.length > 0)\r\n            throw new HttpException(`This category can't be deleted, because products are linked to this category!`, HttpStatus.CONFLICT);\r\n\r\n        await this.categoryModel.findOneAndDelete({ _id: categoryId });\r\n    }\r\n}","import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put, UseGuards, Request, UnauthorizedException } from \"@nestjs/common\";\r\nimport { AuthGuard } from \"@nestjs/passport\";\r\nimport { Role } from \"../auth/roles/role.enum\";\r\nimport { Roles } from \"../auth/roles/roles.decorator\";\r\nimport { RolesGuard } from \"../auth/roles/roles.guard\";\r\nimport { CommentDto } from \"./comment.dto\";\r\nimport { Comment } from \"./comment.schema\";\r\nimport { CommentService } from \"./comment.service\";\r\n\r\n@Controller()\r\nexport class CommentController {\r\n    constructor(private readonly commentService: CommentService) {}\r\n\r\n    @Get('comments')\r\n    async getAllComments(): Promise<Comment[]> {\r\n        return await this.commentService.getAllComments();\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Get('comments/:userId')\r\n    async getAllCommentsFromUser(@Param('userId') userId: string): Promise<Comment[]> {\r\n        return await this.commentService.getAllCommentsFromUser(userId);\r\n    }\r\n\r\n    @Get('product/:productId/comments')\r\n    async getAllCommentsFromProduct(@Param('productId') productId: string): Promise<Comment[]> {\r\n        return await this.commentService.getAllCommentsFromProduct(productId);\r\n    }\r\n\r\n    @Get('product/:productId/comment/:commentId')\r\n    async getCommentById(@Param('productId') productId: string, @Param('commentId') commentId: string): Promise<Comment> {\r\n        try {\r\n            return await this.commentService.getCommentById(productId, commentId);\r\n        } catch (error) {\r\n            this.generateCommentExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.CUSTOMER)\r\n    @Post('product/:productId/comment')\r\n    async createComment(@Request() req: any, @Param('productId') productId: string, @Body() commentDto: CommentDto): Promise<Object> {\r\n        try {\r\n            await this.commentService.createComment(req.user, productId, commentDto);\r\n\r\n            return {\r\n                status: 201,\r\n                message: 'Comment has been succesfully created!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCommentExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.CUSTOMER)\r\n    @Put('product/:productId/comment/:commentId')\r\n    async updateComment(@Request() req: any, @Param('productId') productId: string, @Param('commentId') commentId: string, @Body() newComment: Partial<CommentDto>): Promise<Object> {\r\n        try {\r\n            await this.commentService.updateComment(req.user, productId, commentId, newComment);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Comment has been succesfully updated!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCommentExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.CUSTOMER)\r\n    @Delete('product/:productId/comment/:commentId')\r\n    async deleteComment(@Request() req: any, @Param('productId') productId: string, @Param('commentId') commentId: string): Promise<Object> {\r\n        try {\r\n            await this.commentService.deleteComment(req.user, productId, commentId);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Comment has been succesfully deleted!'\r\n            }\r\n        } catch (error) {\r\n            this.generateCommentExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateCommentExceptions(error: any) {\r\n        if(error?.name === 'CastError')\r\n            throw new HttpException(`This comment doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        if(error?.response?.message)\r\n            throw new UnauthorizedException(error?.response?.message);\r\n\r\n        if(error?.errors?.title)\r\n            throw new HttpException(error.errors.title.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.body)\r\n            throw new HttpException(error.errors.body.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.rating)\r\n            throw new HttpException(error.errors.rating.message, HttpStatus.CONFLICT);\r\n    }\r\n}","export class CommentDto {\r\n    title: string;\r\n    body: string;\r\n    rating: number;\r\n}\r\n","import { Module } from \"@nestjs/common\";\r\nimport { ProductModule } from \"../product/product.module\";\r\nimport { CommentController } from \"./comment.controller\";\r\nimport { CommentService } from \"./comment.service\";\r\n\r\n\r\n@Module({\r\n    imports: [ProductModule],\r\n    controllers: [CommentController],\r\n    providers: [CommentService],\r\n    exports: [CommentService]\r\n})\r\n\r\nexport class CommentModule {};","import { Inject, Injectable} from \"@nestjs/common\";\r\nimport mongoose from \"mongoose\";\r\nimport { ProductService } from \"../product/product.service\";\r\nimport { CommentDto } from \"./comment.dto\";\r\nimport { Comment } from \"./comment.schema\";\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n    constructor(@Inject(ProductService) private productService: ProductService) {}\r\n\r\n    async getAllComments(): Promise<Comment[]> {\r\n        return await this.productService.getAllComments();\r\n    }\r\n\r\n    async getAllCommentsFromUser(userId: string): Promise<Comment[]> {\r\n        return await this.productService.getAllCommentsFromUser(userId);\r\n    }\r\n    \r\n    async getAllCommentsFromProduct(productId: string): Promise<Comment[]> {\r\n        return await this.productService.getAllCommentsFromProduct(productId);\r\n    }\r\n\r\n    async getCommentById(productId: string, commentId: string): Promise<Comment> {\r\n        return await this.productService.getCommentById(productId, commentId);\r\n    }\r\n\r\n    async createComment(user: any, productId: string, commentDto: CommentDto): Promise<void> {\r\n        const comment = {\r\n            _id: new mongoose.Types.ObjectId(),\r\n            title: commentDto.title,\r\n            body: commentDto.body,\r\n            rating: commentDto.rating,\r\n            createdBy: user._id,\r\n            createdAt: new Date()\r\n        }\r\n\r\n        await this.productService.addCommentToProduct(productId, comment);\r\n    }\r\n\r\n    async updateComment(user: any, productId: string, commentId: string, newComment: Partial<CommentDto>): Promise<void> {\r\n        await this.productService.updateCommentFromProduct(user, productId, commentId, newComment);\r\n    }\r\n\r\n    async deleteComment(user: any, productId: string, commentId: string): Promise<void> {\r\n        return await this.productService.deleteCommentFromProduct(user, productId, commentId);\r\n    }\r\n}","import { Controller, Get, Param } from \"@nestjs/common\";\r\nimport { Icon } from \"./icon.schema\";\r\nimport { IconService } from \"./icon.service\";\r\n\r\n@Controller()\r\nexport class IconController {\r\n    constructor(private readonly iconService: IconService) {}\r\n\r\n    @Get('icons')\r\n    async getIcons(): Promise<Icon[]> {\r\n        return await this.iconService.getIcons();\r\n    }\r\n\r\n    @Get('icon/:iconId')\r\n    async getIconById(@Param('iconId') iconId: string): Promise<Icon> {\r\n        return await this.iconService.getIconById(iconId);\r\n    }\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { IconController } from \"./icon.controller\";\r\nimport { Icon, IconSchema } from \"./icon.schema\";\r\nimport { IconService } from \"./icon.service\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Icon.name, schema: IconSchema }])],\r\n    controllers: [IconController],\r\n    providers: [IconService],\r\n    exports: [IconService]\r\n})\r\n\r\nexport class IconModule {};","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ObjectId } from 'mongoose';\r\n\r\n@Schema()\r\nexport class Icon {\r\n    @Prop()\r\n    _id: ObjectId;\r\n\r\n    @Prop({\r\n        required: [true, 'Title is required!']\r\n    })\r\n    title: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Icon is required!'],\r\n        default: 'https://www.simplelaw.com/hubfs/Blog_Media/cdn2.hubspot.nethubfs5154887Blog_Mediaimage_not_found.png'\r\n    })\r\n    icon: String;\r\n}\r\n\r\nexport const IconSchema = SchemaFactory.createForClass(Icon);","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model } from \"mongoose\";\r\nimport { Icon } from \"./icon.schema\";\r\n\r\n@Injectable()\r\nexport class IconService {\r\n    constructor(@InjectModel(Icon.name) private iconModel: Model<Icon>) {}\r\n\r\n    async getIcons(): Promise<Icon[]> {\r\n        return await this.iconModel.find({});\r\n    }\r\n\r\n    async getIconById(iconId: string): Promise<Icon> {\r\n        return await this.iconModel.findById({ _id: iconId });\r\n    }\r\n}","import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put, UnauthorizedException, UseGuards, Request } from \"@nestjs/common\";\r\nimport { AuthGuard } from \"@nestjs/passport\";\r\nimport { Role } from \"../auth/roles/role.enum\";\r\nimport { Roles } from \"../auth/roles/roles.decorator\";\r\nimport { RolesGuard } from \"../auth/roles/roles.guard\";\r\nimport { ProductDto } from \"./product.dto\";\r\nimport { Product } from \"./product.schema\";\r\nimport { ProductService } from \"./product.service\";\r\n\r\n@Controller()\r\nexport class ProductController {\r\n    constructor(private readonly productService: ProductService) {}\r\n\r\n    @Get('products')\r\n    async getAllProducts(): Promise<Product[]> {\r\n        return await this.productService.getAllProducts();\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'))\r\n    @Get('products/:brandId')\r\n    async getAllProductsFromBrand(@Param('brandId') brandId: string): Promise<Product[]> {\r\n        return await this.productService.getAllProductsFromBrand(brandId);\r\n    }\r\n\r\n    @Get('products/category/:categoryId')\r\n    async getAllProductsFromCategory(@Param('categoryId') categoryId: string): Promise<Product[]> {\r\n        return await this.productService.getAllProductsFromCategory(categoryId);\r\n    }\r\n\r\n    @Get('product/:productId')\r\n    async getProductById(@Param('productId') productId: string): Promise<Product> {\r\n        try {\r\n            return await this.productService.getProductById(productId);\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @Get('product/:productId/advice')\r\n    async getProductAdvice(@Param('productId') productId: string): Promise<Object> {\r\n        try {\r\n            return await this.productService.calculateAdvice(productId);\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Post('product')\r\n    async createProduct(@Request() req: any, @Body() productDto: ProductDto): Promise<Object> {\r\n        try {\r\n            await this.productService.createProduct(req.user, productDto);\r\n            \r\n            return {\r\n                status: 201,\r\n                message: 'Product has been successfully created!'\r\n            }\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Put('product/:productId')\r\n    async updateProduct(@Request() req: any, @Param('productId') productId: string, @Body() newProduct: Partial<ProductDto>): Promise<Object> {\r\n        try {\r\n            await this.productService.updateProduct(req.user, productId, newProduct);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Product has been successfully updated!'\r\n            }\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.BRAND)\r\n    @Delete('product/:productId')\r\n    async deleteProduct(@Request() req: any, @Param('productId') productId: string): Promise<Object> {\r\n        try {\r\n            await this.productService.deleteProduct(req.user, productId);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'Product has been successfully deleted!'\r\n            }\r\n        } catch (error) {\r\n            this.generateProductExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateProductExceptions(error: any) {\r\n        if(error?.name === 'CastError')\r\n            throw new HttpException(`This product doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        if(error?.response?.message)\r\n            throw new UnauthorizedException(error?.response?.message);\r\n            \r\n        if(error?.errors?.name)\r\n            throw new HttpException(error.errors.name.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.picture)\r\n            throw new HttpException(error.errors.picture.message, HttpStatus.CONFLICT);\r\n        \r\n        if(error?.errors?.price)\r\n            throw new HttpException(error.errors.price.message, HttpStatus.CONFLICT);\r\n            \r\n        if(error?.errors?.description)\r\n            throw new HttpException(error.errors.description.message, HttpStatus.CONFLICT);\r\n\r\n        if(error?.errors?.isActive)\r\n            throw new HttpException(error.errors.isActive.message, HttpStatus.CONFLICT);\r\n    }\r\n}","export class ProductDto {\r\n    name: string;\r\n    picture: string;\r\n    price: number;\r\n    description: string;\r\n    category: string;\r\n    comments: [Comment];\r\n}\r\n","import { forwardRef, Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { CategoryModule } from \"../category/category.module\";\r\nimport { IconModule } from \"../icon/icon.module\";\r\nimport { UserModule } from \"../user/user.module\";\r\nimport { ProductController } from \"./product.controller\";\r\nimport { Product, ProductSchema } from \"./product.schema\";\r\nimport { ProductService } from \"./product.service\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]), forwardRef(() => UserModule), forwardRef(() => CategoryModule), IconModule],\r\n    controllers: [ProductController],\r\n    providers: [ProductService],\r\n    exports: [ProductService]\r\n})\r\n\r\nexport class ProductModule {};","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ObjectId } from 'mongoose';\r\nimport { Category } from '../category/category.schema';\r\nimport { User } from '../user/user.schema';\r\n\r\n@Schema()\r\nexport class Product {\r\n    @Prop()\r\n    _id: ObjectId\r\n\r\n    @Prop({\r\n        required: [true, 'Name is required!'],\r\n    })\r\n    name: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Picture is required!'],\r\n    })\r\n    picture: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Price is required!'],\r\n    })\r\n    price: Number;\r\n\r\n    @Prop({\r\n        required: [true, 'Description is required!'],\r\n    })\r\n    description: String;\r\n\r\n    @Prop()\r\n    category: Category;\r\n\r\n    @Prop()\r\n    comments: [Comment];\r\n\r\n    @Prop()\r\n    createdBy: User;\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n}\r\n\r\nexport const ProductSchema = SchemaFactory.createForClass(Product);","import { forwardRef, HttpException, HttpStatus, Inject, Injectable, UnauthorizedException } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport mongoose, { Model } from \"mongoose\";\r\nimport { CategoryService } from \"../category/category.service\";\r\nimport { Comment } from \"../comment/comment.schema\";\r\nimport { CommentDto } from \"../comment/comment.dto\";\r\nimport { UserService } from \"../user/user.service\";\r\nimport { ProductDto } from \"./product.dto\";\r\nimport { Product } from \"./product.schema\";\r\nimport { CategoryDto } from \"../category/category.dto\";\r\nimport { IconService } from \"../icon/icon.service\";\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    constructor(@InjectModel(Product.name) private productModel: Model<Product>, @Inject(forwardRef(() => CategoryService)) private categoryService: CategoryService, @Inject(forwardRef(() => UserService)) private userService: UserService, @Inject(IconService) private iconService: IconService) { }\r\n\r\n    async getAllProducts(): Promise<Product[]> {\r\n        const products = await this.productModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$comments',\r\n                    'preserveNullAndEmptyArrays': true\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'category.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'category.createdBy'\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'comments.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'comment.createdBy'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'category.createdBy': {\r\n                        '$first': '$category.createdBy'\r\n                    },\r\n                    'comments.createdBy': {\r\n                        '$first': '$comment.createdBy'\r\n                    }\r\n                }\r\n            }, {\r\n                '$group': {\r\n                    '_id': '$_id',\r\n                    'name': {\r\n                        '$first': '$name'\r\n                    },\r\n                    'picture': {\r\n                        '$first': '$picture'\r\n                    },\r\n                    'price': {\r\n                        '$first': '$price'\r\n                    },\r\n                    'description': {\r\n                        '$first': '$description'\r\n                    },\r\n                    'category': {\r\n                        '$first': '$category'\r\n                    },\r\n                    'comments': {\r\n                        '$push': '$comments'\r\n                    },\r\n                    'createdBy': {\r\n                        '$first': '$createdBy'\r\n                    },\r\n                    'createdAt': {\r\n                        '$first': '$createdAt'\r\n                    },\r\n                    '__v': {\r\n                        '$first': '$__v'\r\n                    }\r\n                }\r\n            }, {\r\n                '$sort': {\r\n                    'createdAt': -1\r\n                }\r\n            }\r\n        ]);\r\n\r\n        return products;\r\n    }\r\n\r\n    async getAllProductsFromBrand(brandId: string): Promise<Product[]> {\r\n        return await this.productModel.find({ 'createdBy._id': brandId });\r\n    }\r\n\r\n    async getAllProductsFromCategory(categoryId: string): Promise<Product[]> {\r\n        return await this.productModel.find({ 'category._id': categoryId });\r\n    }\r\n\r\n    async getAllComments(): Promise<Comment[]> {\r\n        const comments = await this.productModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$comments'\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'comments.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'comment.createdBy'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'comments.createdBy': {\r\n                        '$first': '$comment.createdBy'\r\n                    }\r\n                }\r\n            }, {\r\n                '$group': {\r\n                    '_id': '$_id',\r\n                    'comments': {\r\n                        '$push': '$comments'\r\n                    }\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    '_id': 0,\r\n                    'comments': 1\r\n                }\r\n            }\r\n        ]);\r\n\r\n        return comments[0]?.comments;\r\n    }\r\n\r\n    async getAllCommentsFromUser(userId: string): Promise<Comment[]> {\r\n        const comments = await this.productModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$comments'\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    'comments.createdBy': new mongoose.Types.ObjectId(userId)\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'comments.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'comment.createdBy'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'comments.createdBy': {\r\n                        '$first': '$comment.createdBy'\r\n                    }\r\n                }\r\n            }, {\r\n                '$group': {\r\n                    '_id': '$_id',\r\n                    'comments': {\r\n                        '$push': '$comments'\r\n                    }\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    '_id': 0,\r\n                    'comments': 1\r\n                }\r\n            }\r\n        ]);\r\n\r\n        return comments[0]?.comments;\r\n    }\r\n\r\n    async getAllCommentsFromProduct(productId: string): Promise<Comment[]> {\r\n        const comments = await this.productModel.aggregate([\r\n            {\r\n                '$match': {\r\n                    '_id': new mongoose.Types.ObjectId(productId)\r\n                }\r\n            }, {\r\n                '$unwind': {\r\n                    'path': '$comments'\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'comments.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'comment.createdBy'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'comments.createdBy': {\r\n                        '$first': '$comment.createdBy'\r\n                    }\r\n                }\r\n            }, {\r\n                '$group': {\r\n                    '_id': new mongoose.Types.ObjectId(productId),\r\n                    'comments': {\r\n                        '$push': '$comments'\r\n                    }\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    '_id': 0,\r\n                    'comments': 1\r\n                }\r\n            }\r\n        ]);\r\n\r\n        return comments[0]?.comments;\r\n    }\r\n\r\n    async getProductById(productId: string): Promise<Product> {\r\n        const product = await this.productModel.aggregate([\r\n            {\r\n                '$match': {\r\n                    '_id': new mongoose.Types.ObjectId(productId)\r\n                }\r\n            },\r\n            {\r\n                '$unwind': {\r\n                    'path': '$comments',\r\n                    'preserveNullAndEmptyArrays': true\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'category.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'category.createdBy'\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'comments.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'comment.createdBy'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'category.createdBy': {\r\n                        '$first': '$category.createdBy'\r\n                    },\r\n                    'comments.createdBy': {\r\n                        '$first': '$comment.createdBy'\r\n                    }\r\n                }\r\n            }, {\r\n                '$group': {\r\n                    '_id': '$_id',\r\n                    'name': {\r\n                        $first: '$name'\r\n                    },\r\n                    'picture': {\r\n                        $first: '$picture'\r\n                    },\r\n                    'price': {\r\n                        $first: '$price'\r\n                    },\r\n                    'description': {\r\n                        $first: '$description'\r\n                    },\r\n                    'category': {\r\n                        $first: '$category'\r\n                    },\r\n                    'comments': {\r\n                        '$push': '$comments'\r\n                    },\r\n                    'createdBy': {\r\n                        $first: '$createdBy'\r\n                    },\r\n                    'createdAt': {\r\n                        $first: '$createdAt'\r\n                    },\r\n                    '__v': {\r\n                        $first: '$__v'\r\n                    }\r\n                }\r\n            }\r\n        ]);\r\n\r\n        if (!product[0])\r\n            throw new HttpException(`This product doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        return product[0];\r\n    }\r\n\r\n    async getCommentById(productId: string, commentId: string): Promise<Comment> {\r\n        const comment = await this.productModel.aggregate([\r\n            {\r\n                '$match': {\r\n                    '_id': new mongoose.Types.ObjectId(productId)\r\n                }\r\n            }, {\r\n                '$unwind': {\r\n                    'path': '$comments'\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    'comments._id': new mongoose.Types.ObjectId(commentId)\r\n                }\r\n            }, {\r\n                '$lookup': {\r\n                    'from': 'users',\r\n                    'localField': 'comments.createdBy',\r\n                    'foreignField': '_id',\r\n                    'as': 'comment.createdBy'\r\n                }\r\n            }, {\r\n                '$set': {\r\n                    'comments.createdBy': {\r\n                        '$first': '$comment.createdBy'\r\n                    }\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    '_id': 0,\r\n                    'comments': 1\r\n                }\r\n            }\r\n        ]);\r\n\r\n        if (!comment[0]?.comments || !comment[0])\r\n            throw new HttpException(`This comment doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        return comment[0].comments;\r\n    }\r\n\r\n    async calculateAdvice(productId: string): Promise<Object> {\r\n        let advice: string;\r\n        const avg = await this.productModel.aggregate([\r\n            {\r\n                '$match': {\r\n                    '_id': new mongoose.Types.ObjectId(productId)\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    'avg': {\r\n                        '$avg': '$comments.rating'\r\n                    }\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    '_id': 0,\r\n                    'avg': {\r\n                        '$round': [\r\n                            '$avg', 2\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        ]);\r\n\r\n        if(avg[0]?.avg > 8) {\r\n            advice = 'The customers wants this product right now!'\r\n        } else if(avg[0]?.avg > 5.1) {\r\n            advice = 'Most of the customers wants this product on the market!'\r\n        } else if(avg[0]?.avg > 3) {\r\n            advice = `Most of the customers don't want this product on the market!`\r\n        } else if(avg[0]?.avg > 1) {\r\n            advice = `The customers don't want this product!`\r\n        } else {\r\n            advice = `No advice yet, because no comments!`\r\n        }\r\n\r\n        return {\r\n            avg: avg[0].avg,\r\n            advice\r\n        };\r\n    }\r\n\r\n    async createProduct(user: any, productDto: ProductDto): Promise<void> {\r\n        await this.productModel.create({\r\n            _id: new mongoose.Types.ObjectId(),\r\n            name: productDto.name,\r\n            picture: productDto.picture,\r\n            price: productDto.price,\r\n            description: productDto.description,\r\n            category: await this.categoryService.getCategoryById(productDto.category),\r\n            comments: [],\r\n            createdAt: new Date(),\r\n            createdBy: await this.userService.getUserByEmailAddress(user.emailAddress)\r\n        });\r\n    }\r\n\r\n    async addCommentToProduct(productId: string, newComment: Partial<CommentDto>): Promise<void> {\r\n        await this.productModel.findOneAndUpdate({ _id: productId }, { $push: { comments: newComment } }, {\r\n            upsert: true,\r\n            new: true,\r\n            runValidators: true,\r\n            setDefaultsOnInsert: true\r\n        });\r\n    }\r\n\r\n    async updateProduct(user: any, productId: string, newProduct: Partial<ProductDto>): Promise<void> {\r\n        const product = await this.productModel.findById({ _id: productId })\r\n\r\n        if (!user._id.equals(product.createdBy._id))\r\n            throw new UnauthorizedException({ message: `This user don't have access to this method!` });\r\n\r\n        if (product)\r\n            product.name = newProduct?.name;\r\n            product.picture = newProduct?.picture;\r\n            product.price = newProduct?.price;\r\n            product.description = newProduct?.description;\r\n            product.category = await this.categoryService.getCategoryById(newProduct.category);\r\n\r\n        await this.productModel.findOneAndUpdate({ _id: productId }, product, {\r\n            upsert: true,\r\n            new: true,\r\n            runValidators: true,\r\n            setDefaultsOnInsert: true\r\n        });\r\n    }\r\n\r\n    async updateCategoryFromNestedProducts(newCategory: Partial<CategoryDto>, products: Product[]): Promise<void> {\r\n        products.forEach(async product => {\r\n            await this.productModel.findOneAndUpdate({ 'category._id': product.category._id },\r\n                {\r\n                    'category.title': newCategory?.title,\r\n                    'category.description': newCategory?.description,\r\n                    'category.icon': await this.iconService.getIconById(newCategory?.icon),\r\n                }, {\r\n                upsert: true,\r\n                new: true,\r\n                runValidators: true,\r\n                setDefaultsOnInsert: true\r\n            })\r\n        });\r\n    }\r\n\r\n    async updateCommentFromProduct(user: any, productId: string, commentId: string, newComment: Partial<CommentDto>): Promise<void> {\r\n        const oldComment = await this.getCommentById(productId, commentId);\r\n\r\n        if (!user._id.equals(oldComment.createdBy._id))\r\n            throw new UnauthorizedException({ message: `This user don't have access to this method!` });\r\n\r\n        await this.productModel.findOneAndUpdate({ _id: productId, 'comments._id': new mongoose.Types.ObjectId(commentId) }, { $set: { 'comments.$.title': newComment?.title, 'comments.$.body': newComment?.body, 'comments.$.rating': newComment?.rating } }, {\r\n            upsert: true,\r\n            new: true,\r\n            runValidators: true,\r\n            setDefaultsOnInsert: true\r\n        });\r\n    }\r\n\r\n    async deleteProduct(user: any, productId: string): Promise<void> {\r\n        const product = await this.productModel.findById({ _id: productId })\r\n\r\n        if (!user._id.equals(product.createdBy._id))\r\n            throw new UnauthorizedException({ message: `This user don't have access to this method!` });\r\n\r\n        await this.productModel.findOneAndDelete({ _id: productId });\r\n    }\r\n\r\n    async deleteCommentFromProduct(user: any, productId: string, commentId: string): Promise<void> {\r\n        const comment = await this.getCommentById(productId, commentId);\r\n\r\n        if (!user._id.equals(comment.createdBy._id))\r\n            throw new UnauthorizedException({ message: `This user don't have access to this method!` });\r\n\r\n        await this.productModel.findOneAndUpdate({ _id: productId, 'comments._id': new mongoose.Types.ObjectId(commentId) }, { $pull: { 'comments': { _id: new mongoose.Types.ObjectId(commentId) } } }, {\r\n            upsert: true,\r\n            new: true,\r\n            runValidators: true,\r\n            setDefaultsOnInsert: true\r\n        });\r\n    }\r\n}","export class LoginUserDto {\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}\r\n","export class RegisterUserDto {\r\n    name: string;\r\n    age: number;\r\n    emailAddress: string;\r\n    picture: string;\r\n    role: string;\r\n    password: string;\r\n\r\n    constructor(name: string, age: number, emailAddress: string, picture: string, role: string, password: string) {\r\n        this.name = name;\r\n        this.age = age;\r\n        this.emailAddress = emailAddress;\r\n        this.picture = picture;\r\n        this.role = role;\r\n        this.password = password;\r\n    }\r\n}\r\n","import { Body, Controller, Get, HttpException, HttpStatus, Param, Post, Request, UseGuards } from \"@nestjs/common\";\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Role } from \"../auth/roles/role.enum\";\r\nimport { Roles } from \"../auth/roles/roles.decorator\";\r\nimport { RolesGuard } from \"../auth/roles/roles.guard\";\r\nimport { LoginUserDto } from \"./dtos/loginUser.dto\";\r\nimport { RegisterUserDto } from \"./dtos/registerUser.dto\";\r\nimport { User } from \"./user.schema\";\r\nimport { UserService } from \"./user.service\";\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n    constructor(private authService: AuthService, private userService: UserService) { }\r\n\r\n    @UseGuards(AuthGuard('local'))\r\n    @Post('login')\r\n    async login(@Body() loginUserDto: LoginUserDto): Promise<Object> {\r\n        try {\r\n            const token = await this.authService.login(loginUserDto);\r\n\r\n            return {\r\n                'message': 'You are successfully logged in!',\r\n                'jwt_token': token\r\n            }\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @Post('register')\r\n    async register(@Body() registerUserDto: RegisterUserDto): Promise<Object> {\r\n        try {\r\n            await this.authService.register(registerUserDto);\r\n\r\n            return {\r\n                status: 201,\r\n                message: 'User has been successfully registered!'\r\n            }\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'))\r\n    @Get('profile')\r\n    async getProfile(@Request() req: any): Promise<User> {\r\n        return await this.userService.getUserByEmailAddress(req.user.emailAddress);\r\n    }\r\n\r\n    @Get(':userId')\r\n    async getUser(@Param('userId') userId: string): Promise<User> {\r\n        try {\r\n            return await this.userService.getUserById(userId);\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'))\r\n    @Get(':userId/followers')\r\n    async getUserFollowers(@Param('userId') userId: string): Promise<User[]> {\r\n        try {\r\n            return await this.userService.getFollowers(userId);\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.CUSTOMER)\r\n    @Post(':userId/follow')\r\n    async followUser(@Param('userId') userId: string, @Body() emailAddress: Object): Promise<Object> {\r\n        try {\r\n            await this.userService.followUser(Object(emailAddress)['emailAddress'], userId);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'User has been successfully followed!'\r\n            }\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Roles(Role.CUSTOMER)\r\n    @Post(':userId/unfollow')\r\n    async unfollowUser(@Param('userId') userId: string, @Body() emailAddress: Object): Promise<Object> {\r\n        try {\r\n            await this.userService.unfollowUser(Object(emailAddress)['emailAddress'], userId);\r\n\r\n            return {\r\n                status: 200,\r\n                message: 'User has been successfully unfollowed!'\r\n            }\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\r\n    @Get(':userId/status')\r\n    async checkFollowStatus(@Request() req: any, @Param('userId') userId: string): Promise<boolean> {\r\n        try {\r\n            return await this.userService.alreadyFollowingUser(req.user.emailAddress, userId);\r\n        } catch (error) {\r\n            this.generateUserExceptions(error);\r\n        }\r\n    }\r\n\r\n    generateUserExceptions(error: any) {\r\n        if (error?.name === 'CastError')\r\n            throw new HttpException(`This user doesn't exists!`, HttpStatus.NOT_FOUND)\r\n\r\n        if (error?.response === 'This user already exists!')\r\n            throw new HttpException(`This user already exists!`, HttpStatus.CONFLICT)\r\n\r\n        if (error?.response?.message === `You don't follow this customer!`)\r\n            throw new HttpException(`You don't follow this customer!`, HttpStatus.CONFLICT)\r\n\r\n        if (error?.response?.message === `You can only follow other customers!`)\r\n            throw new HttpException(`You can only follow other customers!`, HttpStatus.BAD_REQUEST)\r\n\r\n        if (error?.response?.message === `You already follow this customer!`)\r\n            throw new HttpException(`You already follow this customer!`, HttpStatus.BAD_REQUEST)\r\n\r\n        if (error?.errors?.name)\r\n            throw new HttpException(error.errors.name.message, HttpStatus.CONFLICT);\r\n\r\n        if (error?.errors?.emailAddress)\r\n            throw new HttpException(error.errors.emailAddress.message, HttpStatus.CONFLICT);\r\n\r\n        if (error?.errors?.picture)\r\n            throw new HttpException(error.errors.picture.message, HttpStatus.CONFLICT);\r\n\r\n        if (error?.errors?.role)\r\n            throw new HttpException(error.errors.role.message, HttpStatus.CONFLICT);\r\n\r\n        if (error?.errors?.password)\r\n            throw new HttpException(error.errors.password.message, HttpStatus.CONFLICT);\r\n    }\r\n}","import { forwardRef, Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { UserController } from \"./user.controller\";\r\nimport { User, UserSchema } from \"./user.schema\";\r\nimport { UserService } from \"./user.service\";\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from \"@nestjs/passport\"\r\nimport { AuthModule } from \"../auth/auth.module\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), forwardRef(() => AuthModule), PassportModule, JwtModule.register({\r\n        secret: 'S1e2C3r4E5t',\r\n        signOptions: { expiresIn: '7d' },\r\n    })],\r\n    controllers: [UserController],\r\n    providers: [UserService],\r\n    exports: [UserService]\r\n})\r\nexport class UserModule {};","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ObjectId } from 'mongoose';\r\nimport { Role } from '../auth/roles/role.enum';\r\n\r\n@Schema()\r\nexport class User {\r\n    @Prop()\r\n    _id: ObjectId;\r\n\r\n    @Prop({\r\n        required: [true, 'Name is required!'],\r\n    })\r\n    name: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Age is required!'],\r\n    })\r\n    age: Number;\r\n\r\n    @Prop({\r\n        required: [true, 'Emailaddress is required!'],\r\n        validate: {\r\n            validator: function (v: any) {\r\n                return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(v);\r\n            },\r\n            message: 'Use a correct emailaddress like j.doe@gmail.com!',\r\n        },\r\n    })\r\n    emailAddress: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Picture is required!'],\r\n        default: 'https://cdn-icons-png.flaticon.com/512/149/149071.png'\r\n    })\r\n    picture: String;\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    following: [ObjectId];\r\n\r\n    @Prop({\r\n        required: [true, 'Role is required!'],\r\n        enum: {\r\n            values: [Role.BRAND, Role.CUSTOMER],\r\n            message: 'Choose between a customer or a brand as role!'\r\n        }\r\n    })\r\n    role: String;\r\n\r\n    @Prop({\r\n        required: [true, 'Password is required!']\r\n    })\r\n    password: String;\r\n\r\n    @Prop()\r\n    createdAt: Date;\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);","import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport mongoose, { Model } from \"mongoose\";\r\nimport { RegisterUserDto } from \"./dtos/registerUser.dto\";\r\nimport { User } from \"./user.schema\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(@InjectModel(User.name) private userModel: Model<User>) { }\r\n\r\n    async getUserById(userId: string): Promise<User> {\r\n        const user = await this.userModel.findOne({ _id: userId }).populate('following');\r\n\r\n        if (!user)\r\n            throw new HttpException({ message: `This user doesn't exists!` }, HttpStatus.NOT_FOUND);\r\n\r\n        return user;\r\n    }\r\n\r\n    async getUserByEmailAddress(emailAddress: string): Promise<User> {\r\n        return await this.userModel.findOne({ emailAddress }).populate('following');\r\n    }\r\n\r\n    async registerUser(registerUserDto: RegisterUserDto): Promise<void> {\r\n        await this.userModel.create({\r\n            _id: new mongoose.Types.ObjectId(),\r\n            ...registerUserDto,\r\n            createdAt: new Date()\r\n        });\r\n    }\r\n\r\n    async getFollowers(userId: string): Promise<User[]> {\r\n        const checkUser = await this.getUserById(userId);\r\n\r\n        return this.userModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$following',\r\n                    'preserveNullAndEmptyArrays': true\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    'following': new mongoose.Types.ObjectId(userId)\r\n                }\r\n            }, {\r\n                '$group': {\r\n                    '_id': '$role',\r\n                    'following': {\r\n                        '$push': {\r\n                            '_id': '$_id',\r\n                            'name': '$name',\r\n                            'picture': '$picture'\r\n                        }\r\n                    }\r\n                }\r\n            }, {\r\n                '$project': {\r\n                    '_id': 0,\r\n                    'following': 1\r\n                }\r\n            }\r\n        ])\r\n    }\r\n\r\n    async followUser(emailAddress: string, userId: string): Promise<User> {\r\n        const currentUser = await this.getUserByEmailAddress(emailAddress);\r\n        const followUser = await this.getUserById(userId);\r\n        const followedUser = await this.userModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$following'\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    '_id': currentUser._id,\r\n                    'following': new mongoose.Types.ObjectId(userId)\r\n                }\r\n            }\r\n        ])\r\n\r\n        if (followUser.role === 'customer') {\r\n            if (followedUser.length === 0) {\r\n                return await this.userModel.findOneAndUpdate({ emailAddress }, { $push: { following: new mongoose.Types.ObjectId(userId) } });\r\n            } else {\r\n                throw new HttpException({ message: `You already follow this customer!` }, HttpStatus.BAD_REQUEST);\r\n            }\r\n        } else {\r\n            throw new HttpException({ message: `You can only follow other customers!` }, HttpStatus.BAD_REQUEST);\r\n        }\r\n    }\r\n\r\n    async unfollowUser(emailAddress: string, userId: string): Promise<User> {\r\n        const currentUser = await this.getUserByEmailAddress(emailAddress);\r\n        const followUser = await this.getUserById(userId);\r\n        const followedUser = await this.userModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$following'\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    '_id': currentUser._id,\r\n                    'following': new mongoose.Types.ObjectId(userId)\r\n                }\r\n            }\r\n        ])\r\n\r\n        if (followedUser.length > 0)\r\n            return await this.userModel.findOneAndUpdate({ emailAddress }, { $pull: { following: new mongoose.Types.ObjectId(userId) } });\r\n\r\n        throw new HttpException({ message: `You don't follow this customer!` }, HttpStatus.CONFLICT);\r\n    }\r\n\r\n    async alreadyFollowingUser(emailAddress: string, userId: string): Promise<boolean> {\r\n        const currentUser = await this.getUserByEmailAddress(emailAddress);\r\n        const followUser = await this.getUserById(userId);\r\n        const followedUser = await this.userModel.aggregate([\r\n            {\r\n                '$unwind': {\r\n                    'path': '$following'\r\n                }\r\n            }, {\r\n                '$match': {\r\n                    '_id': currentUser._id,\r\n                    'following': new mongoose.Types.ObjectId(userId)\r\n                }\r\n            }\r\n        ])\r\n\r\n        if (followedUser.length > 0)\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"bcrypt\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule, { cors: true });\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}